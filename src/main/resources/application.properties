
## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=3

## PostgreSQL
spring.datasource.url=jdbc:postgresql://raja.db.elephantsql.com/ytorclku
spring.datasource.username=ytorclku
spring.datasource.password=I1YmJWDYS_O669Ct8ChNYis17TApPoRW
spring.datasource.driver-class-name=org.postgresql.Driver
#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create

hazelcast.discovery.token=3hw4lIt2ni1uH3tNv4LalqLB5v04CbIn1ck96Tufbrhpl2nyfk
hazelcast.discovery.server=pr-3264

# Kafka Config
# Required connection configs for Kafka producer, consumer, and admin
bootstrap.servers=pkc-2396y.us-east-1.aws.confluent.cloud:9092
security.protocol=SASL_SSL
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username='U5WGURJFNHLFKZAO'   password='4vivDfn/u5MsIBN1WJw8qPHL8HiYS7xR2AuzB6FylG6sKQynDus1QXu6hEReya9B';
sasl.mechanism=PLAIN
# Required for correctness in Apache Kafka clients prior to 2.6
client.dns.lookup=use_all_dns_ips

# Best practice for higher availability in Apache Kafka clients prior to 3.0
session.timeout.ms=45000

# Best practice for Kafka producer to prevent data loss
acks=all
application.kafka.topic.name=Hazelcast-Events


# topic config
io.confluent.developer.config.topic.name=${application.kafka.topic.name}
io.confluent.developer.config.topic.replicas=3
io.confluent.developer.config.topic.partitions=6

# common configs
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.bootstrap.servers=${bootstrap.servers}
spring.kafka.properties.sasl.jaas.config=${sasl.jaas.config}
spring.kafka.properties.security.protocol=${security.protocol}

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer configuration
spring.kafka.consumer.group-id=Hazelcast-Events-${random.uuid}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
